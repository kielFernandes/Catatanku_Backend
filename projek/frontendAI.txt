import React, { useState, useEffect } from 'react';
import axios from 'axios';

function App() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [user, setUser] = useState(null);
  const [text, setText] = useState('');
  const [items, setItems] = useState([]);

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (token) {
      getMe();
      getItems();
    }
  }, []);

  const register = async () => {
    try {
      await axios.post('http://localhost:3000/register', { username, password });
      alert('User registered');
    } catch (err) {
      alert(err.response.data.error);
    }
  };

  const login = async () => {
    try {
      const res = await axios.post('http://localhost:3000/login', { username, password });
      localStorage.setItem('token', res.data.token);
      getMe();
      getItems();
    } catch (err) {
      alert(err.response.data.error);
    }
  };

  const getMe = async () => {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        return;
      }
      const res = await axios.get('http://localhost:3000/me', {
        headers: { Authorization: `Bearer ${token}` }
      });
      setUser(res.data);
    } catch (err) {}
  };

  const getItems = async () => {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        return;
      }
      const res = await axios.get('http://localhost:3000/items', {
        headers: { Authorization: `Bearer ${token}` }
      });
      setItems(res.data);
    } catch (err) {}
  };

  const addItem = async () => {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        return;
      }
      const res = await axios.post(
        'http://localhost:3000/items',
        { text },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      setItems([...items, res.data]);
      setText('');
    } catch (err) {}
  };

  const updateItem = async (item) => {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        return;
      }
      const newText = prompt('Enter new text:', item.text);
      if (newText) {
        const res = await axios.put(
          `http://localhost:3000/items/${item._id}`,
          { text: newText },
          { headers: { Authorization: `Bearer ${token}` } }
        );
        setItems(items.map((x) => (x._id === item._id ? res.data : x)));
      }
    } catch (err) {}
  };

  const deleteItem = async (item) => {
    try {
      if (!window.confirm('Are you sure you want to delete this item?')) {
        return;
      }
      const token = localStorage.getItem('token');
      if (!token) {
        return;
      }
      await axios.delete(`http://localhost:3000/items/${item._id}`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      setItems(items.filter((x) => x._id !== item._id));
    } catch (err) {}
  };

const logout = () => {
  localStorage.removeItem('token');
  setUser(null);
  setItems([]);
};



   return (
    <div>
      {!user ? (
        <>
          <input
            type="text"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            placeholder="Username"
          />
          <input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            placeholder="Password"
          />
          <button onClick={register}>Register</button>
          <button onClick={login}>Login</button>
        </>
      ) : (
        <>
          <input
            type="text"
            value={text}
            onChange={(e) => setText(e.target.value)}
            placeholder="Item text"
          />
          <button onClick={addItem}>Add</button>
          <ul>
            {items.map((item) => (
              <li key={item._id}>
                {item.text}{' '}
                <button onClick={() => updateItem(item)}>Update</button>{' '}
                <button onClick={() => deleteItem(item)}>Delete</button>
              </li>
            ))}
          </ul>
        </>
      )}
    </div>
<button onClick={logout}>Logout</button>


  );
}

export default App;
